@page "/"
@inject NavigationManager NavigationManager
@using Api.classes


<h1>caldendar, events and birthdays</h1>     <!-- Add a button to navigate to the Person List page -->
<button class="btn btn-primary" @onclick="NavigateToPersonList">Go to Person List</button>

<table>
    <thead>
        <tr>
            <th>Dayname and Date</th>
            <th>Event</th>
        </tr>
    </thead>
    <tbody class="Tbody">
        @for (int i = 0; i <=6; i++)
        {
            DateTime currentDate = Dateobj.currentDate.Date.AddDays(i);
            <tr>
                <td>@currentDate.ToString("dddd, dd MMMM yyyy")</td>
                <td>
                    @{
                        var holidayName = APIobj.GetHolidayName(currentDate);
                        var birthdayPersons = Bdays.Where(person => person.Bday.Day == currentDate.Day&& person.Bday.Month==currentDate.Month).ToList();
                        if (!string.IsNullOrWhiteSpace(holidayName))
                        {
                            <span> Holiday: @holidayName</span>
                        }
                        if (birthdayPersons.Any())
                        {
                            <span> Birthday(s): @string.Join(", ", birthdayPersons.Select(p => $"{p.Fname} {p.Lname}"))</span>
                        }
                        if (!birthdayPersons.Any() && string.IsNullOrWhiteSpace(holidayName))
                        {
                            <span> No event</span>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
    <button class="btn btn-primary" @onclick="backwards">6 daysbackwards</button>
    <button class="btn btn-primary" @onclick="Forward">6 days Forward</button>
</table>

@code {
    Api APIobj = new Api();
    Date Dateobj = new Date();
    Person personobj = new Person() {Bday= DateOnly.FromDateTime(DateTime.Now) };
    Sql sqlobj = new Sql();
    List<Person> Bdays;

    protected override void OnInitialized() => Bdays = sqlobj.GetBirthdayList();

    private List<Person> FilterBirthdays(List<Person> allBirthdays)
    {
        DateOnly today = DateOnly.FromDateTime(DateTime.Now);
        DateOnly sixDaysFromNow = today.AddDays(6);

        return allBirthdays
            .Where(person => person.Bday >= today && person.Bday <= sixDaysFromNow)
            .ToList();
    }
    private void Forward() // metode boindet to a button 
    {
        Dateobj.UpdateDate(6);// goes 6 Forward on click
    }
    private void backwards()// metode bindet to a button
    {
        Dateobj.UpdateDate(-6);//goes 6 days backwards on click
    }
    private void NavigateToPersonList()
    {
        // Use the NavigationManager to navigate to the Person List page
        NavigationManager.NavigateTo("/personlist");
    }
}
